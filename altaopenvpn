#!/bin/bash

apt-get update
apt-get install -y dialog curl wget openvpn

if [[ -d /etc/openvpn/client/ ]]; then
        ### Configuracion de Variables
        DIRALTA="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
        DIRVPN=/etc/openvpn/client
        HOST="archive"

        ### Ingresamos datos de login
        dialog --clear \
                --form "Plase complete information PfSense:" 25 60 16 \
                "USER: " 1 1 "usercertmng" 1 32 25 30 \
                "URL: " 2 1 "fwa.example.com.ar" 2 32 25 30 \
                "PORT: " 3 1 "443" 3 32 25 30 \
                "ID CERT: " 4 1 "5d200f6d560cf" 4 32 25 30 \
                "ID CA: " 5 1 "5d27466c51406" 5 32 25 30 \
                "REMOTE VPN1: " 6 1 "vpnb1.example.com.ar" 6 32 25 30 \
                "REMOTE VPN2: " 7 1 "vpnb2.example.com.ar" 7 32 25 30 \
                "PORT VPN(tcp): " 8 1 "1196" 8 32 25 30 \
                "GATEWAY VPN(ping check): " 9 1 "172.24.0.1" 9 32 25 30 \
                --insecure --passwordbox "Password (PfSense):" 10 30 >/tmp/out.tmp \
                2>&1 >/dev/tty

        tr -d " \t" </tmp/out.tmp >/tmp/out2.tmp
        grep "\S" /tmp/out2.tmp >/tmp/out.tmp

        USERNAME=$(sed -n 1p /tmp/out.tmp)
        SITE=$(sed -n 2p /tmp/out.tmp)
        PORT=$(sed -n 3p /tmp/out.tmp)
        ID=$(sed -n 4p /tmp/out.tmp)
        IDCA=$(sed -n 5p /tmp/out.tmp)
        IP_VPN1=$(sed -n 6p /tmp/out.tmp)
        IP_VPN2=$(sed -n 7p /tmp/out.tmp)
        PORT_VPN=$(sed -n 8p /tmp/out.tmp)
        VPN_IP_GATEWAY=$(sed -n 9p /tmp/out.tmp)
        PASSWORD=$(sed -n 10p /tmp/out.tmp)
        rm -f /tmp/out.tmp
        rm -f /tmp/out2.tmp

        ### Comienza la descarga del certificado
        VPN=$(curl --connect-timeout 3 -I -k "https://$SITE:$PORT" 2>&1 | awk '/HTTP\// {print $2}' | wc -l)

        if [[ $VPN -eq 0 ]]; then
                clear
                echo -e "\e[1;33m[VPN]: \e[0mRevisar salida https://$SITE:$PORT para descargar el certificado\e[0m"
                sleep 25
        else
                wget -qO- --keep-session-cookies --save-cookies /tmp/pfsense_cookies.txt \
                        --no-check-certificate https://"$SITE":"$PORT"/system_certmanager.php |
                        grep "name='__csrf_magic'" | sed 's/.*value="\(.*\)".*/\1/' >/tmp/pfsense_csrf.txt

                wget -qO- --keep-session-cookies --load-cookies /tmp/pfsense_cookies.txt \
                        --save-cookies /tmp/pfsense_cookies.txt --no-check-certificate \
                        --post-data "login=Login&usernamefld=$USERNAME&passwordfld=$PASSWORD&__csrf_magic=$(cat /tmp/pfsense_csrf.txt)" \
                        https://"$SITE":"$PORT"/system_certmanager.php | grep "name='__csrf_magic'" |
                        sed 's/.*value="\(.*\)".*/\1/' >/tmp/pfsense_csrf2.txt

                if [ -e /tmp/pfsense_cookies.txt ]; then

                        FILENAME="$DIRALTA/$HOST.crt"
                        wget --keep-session-cookies --load-cookies /tmp/pfsense_cookies.txt --no-check-certificate \
                                --post-data "act=exp&id=$ID&__csrf_magic=$(head -n 1 /tmp/pfsense_csrf2.txt)" \
                                https://"$SITE":"$PORT"/system_certmanager.php -O "$FILENAME"

                        FILENAME2="$DIRALTA/$HOST.key"
                        wget --keep-session-cookies --load-cookies /tmp/pfsense_cookies.txt --no-check-certificate \
                                --post-data "act=key&id=$ID&__csrf_magic=$(head -n 1 /tmp/pfsense_csrf2.txt)" \
                                https://"$SITE":"$PORT"/system_certmanager.php -O "$FILENAME2"

                        FILENAME3="$DIRALTA/$HOST.ca"
                        FILENAME4="$DIRALTA/$HOST.ca2"
                        wget --keep-session-cookies --load-cookies /tmp/pfsense_cookies.txt --no-check-certificate \
                                --post-data "act=exp&id=$IDCA&__csrf_magic=$(head -n 1 /tmp/pfsense_csrf2.txt)" \
                                https://"$SITE":"$PORT"/system_camanager.php -O "$FILENAME3"
                        grep "\S" "$FILENAME3" >"$FILENAME4"
                        cat "$FILENAME4" >"$FILENAME3"

                        rm -f /tmp/pfsense_cookies.txt
                        rm -f /tmp/pfsense_csrf.txt
                        rm -f /tmp/pfsense_csrf2.txt

                else
                        echo "\e[0;31m[VPN]: Fallo la obtencion de certificado en https://$SITE:$PORT \e[0m"
                        sleep 25
                fi

                ### Comienza la configuracion del certificado
                CHECK=$(wc <$HOST.crt -l)
                if [ "$CHECK" -ge 3 ]; then
                        clear
                        echo -e "\e[1;32m[VPN]: \e[0mConfigurando vpn-soporte.conf\e[0m"

                        #Hacemos copia del original
                        cp "$DIRALTA"/example.conf $DIRVPN/vpn-soporte.conf

                        #Generamos el nuevo certificado
                        sed -i -e "/VAR_CA/r $DIRALTA/$HOST.ca" $DIRVPN/vpn-soporte.conf
                        sed -i -e '/VAR_CA/d' $DIRVPN/vpn-soporte.conf
                        sed -i -e "/VAR_CERT/r $DIRALTA/$HOST.crt" $DIRVPN/vpn-soporte.conf
                        sed -i -e '/VAR_CERT/d' $DIRVPN/vpn-soporte.conf
                        sed -i -e "/VAR_KEY/r $DIRALTA/$HOST.key" $DIRVPN/vpn-soporte.conf
                        sed -i -e '/VAR_KEY/d' $DIRVPN/vpn-soporte.conf

                        sed -i s/IP_VPN1/"$IP_VPN1"/g $DIRVPN/vpn-soporte.conf
                        sed -i s/IP_VPN2/"$IP_VPN2"/g $DIRVPN/vpn-soporte.conf
                        sed -i s/PORT_VPN/"$PORT_VPN"/g $DIRVPN/vpn-soporte.conf

                        sed -i s/VPN_IP_GATEWAY/"$VPN_IP_GATEWAY"/g "$DIRALTA"/check_vpn

                        #Iniciamos el servicio
                        systemctl enable openvpn-client@vpn-soporte.service
                        systemctl start openvpn-client@vpn-soporte.service

                        #Lo agregamos al Cron
                        # cp check_vpn /usr/local/sbin/check_vpn
                        # chmod +x /usr/local/sbin/check_vpn
                        # {
                        #         echo ""
                        #         echo "## Chequear estado de vpn ssp"
                        #         echo "@reboot /usr/local/sbin/check_vpn"
                        # } >>/var/spool/cron/crontabs/root
                        # systemctl restart cron.service

                        #Ejemplo para Windows
                        #openssl pkcs12 -export -out cert.p12 -inkey cert.key -in cert.crt -certfile CACert.crt -name ""$SITE"" -passout pass:$CERTPASS
                else
                        echo -e "\e[0;31m[VPN]: \e[0mOcurrio una falla al intentar descargar el certificado correspondiente.\e[0m"
                        sleep 25
                        rm $HOST*
                        exit
                fi

                sleep 5

                ### Borramos carpetas y archivo de altacertificado
                cd "$DIRALTA" || return
                cd ..
                rm -rf altacertificado* && rm -rf script-altacertificadovpn* && rm -rf .wget-hsts
        fi

else
        echo -e "\e[0;31m[VPN]: \e[0mLa carpeta '/etc/openvpn/client/' no existe.\e[0m"
        sleep 25
        exit
fi
